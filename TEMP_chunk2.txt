        clusterManager = new ClusterManager<>(context, map);
        ClusterRenderer renderer = new ClusterRenderer(context, map, clusterManager);
        clusterManager.setRenderer(renderer);
        map.setOnCameraIdleListener(clusterManager);
        map.setOnMarkerClickListener(clusterManager);
        clusterManager.setOnClusterItemClickListener(item -> {
          try { channel.invokeMethod("event#onMarkerTap", item.id); } catch (Throwable ignored) {}
          return false;
        });
      }
      // Migrate existing normal markers into cluster items
      if (!markers.isEmpty()) {
        for (Map.Entry<String, Marker> e : new ArrayList<>(markers.entrySet())) {
          Marker mk = e.getValue();
          String id = e.getKey();
          LatLng p = mk.getPosition();
          ClusterItemImpl item = new ClusterItemImpl(id, p, mk.getTitle(), mk.getSnippet(), "", 48f, 0.5f, 0.62f, 0f, 0f, false);
          clusterItems.put(id, item);
          clusterManager.addItem(item);
          mk.remove();
        }
        markers.clear();
        clusterManager.cluster();
      }
    } else {
      if (clusterManager != null) {
        clusterManager.clearItems();
        clusterItems.clear();
        // keep clusterManager instance but detach listeners so clicks go back to this
        map.setOnMarkerClickListener(this);
        map.setOnCameraIdleListener(null);
      }
    }
  }

  private void applyInitialParams(Map<String, Object> params) {
    try {
      @SuppressWarnings("unchecked")
      Map<String, Object> cam = (Map<String, Object>) params.get("initialCameraPosition");
      if (cam != null) {
        @SuppressWarnings("unchecked") Map<String, Object> t = (Map<String, Object>) cam.get("target");
        double lat = toDouble(t.get("lat"));
        double lng = toDouble(t.get("lng"));
        Double zoomD = toNullableDouble(cam.get("zoom"));
        Double tiltD = toNullableDouble(cam.get("tilt"));
        Double bearingD = toNullableDouble(cam.get("bearing"));
        CameraPosition current = map.getCameraPosition();
        float zoom = zoomD != null ? zoomD.floatValue() : current.zoom;
        float tilt = tiltD != null ? tiltD.floatValue() : current.tilt;
        float bearing = bearingD != null ? bearingD.floatValue() : current.bearing;
